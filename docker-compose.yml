version: '3.8'
services:
  postgres:
    restart: always
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_DB=database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/postgres
    ports:
      - 5432:5432
    volumes:
      - ./pg_data:/data/postgres

  service1:
    restart: always
    image: myservice
    build:
      context: ./service
    container_name: service1
    command: python manage.py runserver 0.0.0.0:80
    ports:
      - 8090:80
    depends_on:
      - postgres

  service2:
    restart: always
    image: myservice
    container_name: service2
    command: python manage.py runserver 0.0.0.0:80
    ports:
      - 8091:80
    depends_on:
      - postgres

  mygration:
    image: myservice
    command: python manage.py makemigrations && python manage.py migrate
    depends_on:
      - postgres
      - service1
      - service2

  frontend:
    restart: always
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
      - PATH=/app/node_modules/.bin:$PATH

  traefik:
    restart: always
    image: traefik:v2.4
    container_name: traefik
    ports:
      - 80:80
    volumes:
      - "./traefik.toml:/traefik.toml"
      - "./traefik_dynamic.toml:/traefik_dynamic.toml"
    depends_on:
      - service1
      - service2

volumes:
  pg-data:

networks:
  backend:
    internal: false #ToDo: change to true later
  frontend:
    internal: false

